plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    // Try to get Flutter root from environment variable
    flutterRoot = System.getenv('FLUTTER_ROOT') ?: System.getenv('FLUTTER_SDK')
    if (flutterRoot == null) {
        // Try common Flutter installation paths
        def possiblePaths = [
            System.getProperty("user.home") + "/flutter",
            "/usr/local/flutter",
            "/opt/flutter"
        ]
        for (path in possiblePaths) {
            if (new File(path).exists()) {
                flutterRoot = path
                break
            }
        }
    }
}

if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file or set FLUTTER_ROOT environment variable.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

flutter {
    source "../.."
}

android {
    namespace = "com.binah.cryptingtool"
    compileSdk = 35
    ndkVersion = "26.1.10909125"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    defaultConfig {
        applicationId = "com.binah.cryptingtool"
        // Minimum SDK version set to 24 for Android 7.0+ (improved stability and security)
        minSdk = 24
        targetSdk = 35
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        
        // Optimize for performance
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64'
        }
    }

    buildTypes {
        release {
            // Enable code shrinking, obfuscation, and optimization
            minifyEnabled = true
            shrinkResources = true
            proguardFiles = [
                getDefaultProguardFile('proguard-android-optimize.txt'),
                'proguard-rules.pro'
            ]
            signingConfig = signingConfigs.debug
            
            // Performance optimizations
            ndk {
                debugSymbolLevel = 'NONE'
            }
        }
        
        debug {
            // Disable optimizations for debug builds
            minifyEnabled = false
            shrinkResources = false
            debuggable = true
        }
    }
    
    // Support for modern Android versions and optimization
    packagingOptions {
        pickFirst '**/libc++_shared.so'
        pickFirst '**/libjsc.so'
        
        // Exclude unnecessary files to reduce APK size
        excludes += [
            'META-INF/DEPENDENCIES',
            'META-INF/LICENSE',
            'META-INF/LICENSE.txt',
            'META-INF/license.txt',
            'META-INF/NOTICE',
            'META-INF/NOTICE.txt',
            'META-INF/notice.txt',
            'META-INF/ASL2.0',
            'META-INF/*.kotlin_module'
        ]
    }
    
    // Lint optimizations
    lintOptions {
        checkReleaseBuilds = false
        abortOnError = false
    }
    
    // Bundle optimizations for Google Play
    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }
}

dependencies {
    // Core Android libraries (updated to latest versions)
    implementation "androidx.core:core-ktx:1.12.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.7.0"
    implementation "androidx.activity:activity-compose:1.8.2"
    
    // Performance monitoring (optional)
    // implementation "androidx.benchmark:benchmark-macro-junit4:1.2.2"
}