pluginManagement {
    def flutterSdkPath = {
        // Check local.properties first
        def properties = new Properties()
        def localPropertiesFile = file("local.properties")
        if (localPropertiesFile.exists()) {
            try {
                localPropertiesFile.withInputStream { properties.load(it) }
                def flutterSdkPath = properties.getProperty("flutter.sdk")
                if (flutterSdkPath != null && new File(flutterSdkPath).exists()) {
                    return flutterSdkPath
                }
            } catch (Exception e) {
                println "Warning: Could not read local.properties: ${e.message}"
            }
        }
        
        // Fallback to environment variables
        def envFlutterRoot = System.getenv('FLUTTER_ROOT') ?: System.getenv('FLUTTER_SDK')
        if (envFlutterRoot != null && new File(envFlutterRoot).exists()) {
            return envFlutterRoot
        }
        
        // Try common installation paths
        def possiblePaths = [
            System.getProperty("user.home") + "/flutter",
            "/usr/local/flutter", "/opt/flutter", "/snap/flutter/current"
        ]
        for (path in possiblePaths) {
            if (new File(path).exists()) {
                return path
            }
        }
        
        throw new GradleException("Flutter SDK not found. Please set flutter.sdk in local.properties or FLUTTER_ROOT environment variable.")
    }

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }

    plugins {
        id "dev.flutter.flutter-gradle-plugin" version "1.0.0" apply false
        id "com.android.application" version "8.2.1" apply false
        id "org.jetbrains.kotlin.android" version "1.9.22" apply false
    }

    try {
        def flutterPath = flutterSdkPath()
        def gradlePath = "${flutterPath}/packages/flutter_tools/gradle"
        if (new File(gradlePath).exists()) {
            includeBuild(gradlePath)
        } else {
            println "Warning: Flutter tools gradle directory not found at: ${gradlePath}"
        }
    } catch (Exception e) {
        println "Warning: Flutter SDK configuration failed: ${e.message}"
        // Continue without Flutter tools to avoid build failure
    }
}

include ":app"