pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }

    plugins {
        id "dev.flutter.flutter-gradle-plugin" apply false
        id "com.android.application" version "8.6.0" apply false
        id "org.jetbrains.kotlin.android" version "2.1.0" apply false
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        google()
        mavenCentral()
        maven {
            url 'https://storage.googleapis.com/flutter_infra_release/flutter/maven'
        }
    }
}

// Flutter SDK path resolution
def flutterSdkPath = {
    // Check local.properties first
    def properties = new Properties()
    def localPropertiesFile = file("local.properties")
    if (localPropertiesFile.exists()) {
        localPropertiesFile.withInputStream { properties.load(it) }
        def flutterSdkPath = properties.getProperty("flutter.sdk")
        if (flutterSdkPath != null && new File(flutterSdkPath).exists()) {
            return flutterSdkPath
        }
    }
    
    // Fallback to environment variables
    def envFlutterRoot = System.getenv('FLUTTER_ROOT') ?: System.getenv('FLUTTER_SDK')
    if (envFlutterRoot != null && new File(envFlutterRoot).exists()) {
        return envFlutterRoot
    }
    
    // Try common installation paths
    def possiblePaths = [
        System.getProperty("user.home") + "/flutter",
        "/tmp/flutter",
        "/usr/local/flutter", 
        "/opt/flutter", 
        "/snap/flutter/current"
    ]
    for (path in possiblePaths) {
        if (new File(path).exists()) {
            return path
        }
    }
    
    throw new GradleException("Flutter SDK not found. Please install Flutter and set flutter.sdk in local.properties")
}

try {
    settings.ext.flutterSdkPath = flutterSdkPath()
    def gradlePath = "${settings.ext.flutterSdkPath}/packages/flutter_tools/gradle"
    if (new File(gradlePath).exists()) {
        includeBuild(gradlePath)
    } else {
        println "Warning: Flutter tools gradle directory not found at: ${gradlePath}"
    }
} catch (Exception e) {
    println "Warning: Flutter SDK configuration failed: ${e.message}"
    // Continue without Flutter tools to avoid build failure
}

include ':app'
