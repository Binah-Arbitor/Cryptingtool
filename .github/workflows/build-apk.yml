name: Build APK (Manual)

on:
  workflow_dispatch:
    inputs:
      build_mode:
        description: 'Build mode for APK'
        required: true
        default: 'release'
        type: choice
        options:
        - debug
        - release
      app_name:
        description: 'Application name'
        required: false
        default: 'CryptingTool'
        type: string
      flutter_version:
        description: 'Flutter version'
        required: false
        default: 'stable'
        type: string
      include_cpp_libs:
        description: 'Include C++ libraries'
        required: false
        default: true
        type: boolean

jobs:
  build-apk:
    runs-on: ubuntu-latest
    name: Build Android APK (${{ inputs.build_mode }})
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Java for Android builds
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Build APK using Flutter C++ Packager
        uses: ./
        with:
          target-platform: 'android'
          app-name: ${{ inputs.app_name }}
          build-mode: ${{ inputs.build_mode }}
          flutter-version: ${{ inputs.flutter_version }}
          cpp-compiler: 'gcc'
          output-path: './apk-output'
          include-cpp-libs: ${{ inputs.include_cpp_libs }}
        id: build-apk
        
      - name: Display Build Results
        run: |
          echo "APK Build Completed!"
          echo "Package created at: ${{ steps.build-apk.outputs.package-path }}"
          echo "Package size: ${{ steps.build-apk.outputs.package-size }}"
          echo "Build mode: ${{ inputs.build_mode }}"
          echo "App name: ${{ inputs.app_name }}"
          
          # List APK output directory
          echo "APK Output Directory Contents:"
          find ./apk-output -type f -name "*.apk" -exec ls -lh {} \; || echo "No APK files found"
          
          # Show all files in output
          echo "All files in output directory:"
          find ./apk-output -type f | head -20
          
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.app_name }}-${{ inputs.build_mode }}-apk
          path: |
            ./apk-output/**/*.apk
            ${{ steps.build-apk.outputs.package-path }}
          retention-days: 30
          if-no-files-found: warn
          
      - name: Create Build Summary
        run: |
          echo "## APK Build Summary ðŸš€" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Property | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Build Mode | ${{ inputs.build_mode }} |" >> $GITHUB_STEP_SUMMARY
          echo "| App Name | ${{ inputs.app_name }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Flutter Version | ${{ inputs.flutter_version }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Include C++ Libraries | ${{ inputs.include_cpp_libs }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Package Path | ${{ steps.build-apk.outputs.package-path }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Package Size | ${{ steps.build-apk.outputs.package-size }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“± APK Files Generated:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          find ./apk-output -name "*.apk" -exec basename {} \; 2>/dev/null || echo "No APK files found"
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  build-both-modes:
    runs-on: ubuntu-latest
    name: Build Both Debug and Release APKs
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.build_mode == ''
    
    strategy:
      matrix:
        build_mode: [debug, release]
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Java for Android builds
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Build APK (${{ matrix.build_mode }})
        uses: ./
        with:
          target-platform: 'android'
          app-name: ${{ inputs.app_name || 'CryptingTool' }}
          build-mode: ${{ matrix.build_mode }}
          flutter-version: ${{ inputs.flutter_version || 'stable' }}
          cpp-compiler: 'gcc'
          output-path: './apk-output-${{ matrix.build_mode }}'
          include-cpp-libs: ${{ inputs.include_cpp_libs || 'true' }}
        id: build-matrix-apk
        
      - name: Upload APK Artifact (${{ matrix.build_mode }})
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.app_name || 'CryptingTool' }}-${{ matrix.build_mode }}-apk
          path: |
            ./apk-output-${{ matrix.build_mode }}/**/*.apk
            ${{ steps.build-matrix-apk.outputs.package-path }}
          retention-days: 30
          if-no-files-found: warn