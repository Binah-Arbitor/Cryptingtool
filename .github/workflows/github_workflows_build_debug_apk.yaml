# .github/workflows/build_debug_apk.yml

name: Android 디버그 APK 빌드

# 이 워크플로우가 언제 실행될지를 정의합니다.
on:
  push:
    branches:
      - main # main 브랜치에 push될 때 실행됩니다.
  pull_request:
    branches:
      - main # main 브랜치로 pull request가 생성될 때 실행됩니다.
  workflow_dispatch: # 수동으로 워크플로우를 실행할 수 있게 합니다.

jobs:
  build:
    # 워크플로우가 실행될 가상 환경을 지정합니다.
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드 체크아웃
      - name: 소스 코드 체크아웃
        uses: actions/checkout@v4

      # 2. JDK (Java Development Kit) 설정
      # Flutter 안드로이드 빌드에 필요합니다.
      - name: JDK 17 설정
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Flutter SDK 설정
      - name: Flutter SDK 설정
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x' # 프로젝트에 맞는 Flutter 버전을 지정하세요.
          channel: 'stable'
          cache: true # 종속성을 캐시하여 빌드 시간을 단축합니다.

      # 4. Flutter 종속성 설치
      - name: Flutter 종속성 설치
        run: flutter pub get

      # 5. 디버그 APK 빌드
      # --debug 플래그를 사용하여 디버그 버전으로 빌드합니다.
      - name: 디버그 APK 빌드
        run: flutter build apk --debug

      # 6. 빌드된 APK 아티팩트로 업로드
      # 워크플로우 실행 결과에서 다운로드할 수 있습니다.
      - name: 빌드된 APK 업로드
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk